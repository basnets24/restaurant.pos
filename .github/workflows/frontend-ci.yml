name: Frontend CI (services/frontend)

on:
  push:
    branches: [ dev, main ]
    paths:
      - 'services/frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ dev, main ]
    paths:
      - 'services/frontend/**'
      - '.github/workflows/frontend-ci.yml'
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: services/frontend/package-lock.json

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --fund=false

      - name: Type check & build
        run: npm run build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: services/frontend/dist

  docker-smoke:
    name: Docker Build (Smoke)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug - List files
        run: |
          echo "Repository root contents:"
          ls -la
          echo "Services/frontend contents:"
          ls -la services/frontend/
          echo "Dockerfile exists:"
          ls -la services/frontend/Dockerfile

      - name: Build image
        run: |
          cd services/frontend
          docker build -t pos-frontend:ci .

      - name: Run container (smoke)
        run: |
          set -e
          echo "Starting container..."
          docker run -d -p 8080:80 --name pos-frontend-ci pos-frontend:ci
          
          echo "Waiting for container to be ready..."
          max_attempts=30
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            if curl -fsSL --max-time 2 http://localhost:8080/ > /dev/null 2>&1; then
              echo "Container is ready after $attempt attempts"
              break
            fi
            echo "Attempt $attempt/$max_attempts: Container not ready, waiting..."
            sleep 2
            attempt=$((attempt + 1))
          done
          
          if [ $attempt -gt $max_attempts ]; then
            echo "Container failed to start properly"
            docker logs pos-frontend-ci --tail=50 || true
            docker rm -f pos-frontend-ci
            exit 1
          fi
          
          echo "Running smoke tests..."
          curl -fsSL http://localhost:8080/ > /dev/null && echo "✓ Root page OK"
          curl -fsSL http://localhost:8080/config.js > /dev/null && echo "✓ Config.js OK"
          
          echo "Container logs:"
          docker logs pos-frontend-ci --tail=20 || true
          
          echo "Cleaning up..."
          docker rm -f pos-frontend-ci
