

{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Microsoft.EntityFrameworkCore": "Warning",
      "Microsoft.EntityFrameworkCore.Database.Command": "Warning"
    }
  },
  
  "AllowedHosts": "*",
  
  "ServiceSettings": {
    "ServiceName": "Identity"
  },

  "Cors": {
    "AllowedOrigins": [
      "http://localhost:5173",
      "https://localhost:5173"
    ]
  },

  "SeqSettings" : {
    "Host" : "localhost",
    "Port" : "5341"
  },

  "IdentitySettings" : {
    "AdminUserEmail": "admin@pos.com",
    "AdminUserPassword": "",
    "RestaurantId" : "acme-bistro",
    "LocationId": "sjc-01"
  },
  
  "PostgresSettings": {
    "Host": "localhost",
    "Port": 5432,
    "Database": "identity_db",
    "Username": "postgres",
    "Password": ""
  },
  
  "IdentityServerSettings": {
    "ApiScopes": [
      { "Name": "menu.read" },
      { "Name": "menu.write" },
      { "Name": "inventory.read" },
      { "Name": "inventory.write" },
      { "Name": "order.read" },
      { "Name": "order.write" },
      { "Name": "payment.read" },
      { "Name": "payment.charge" },
      { "Name": "payment.refund" },
      { "Name": "IdentityServerApi" },
      { "Name": "tenant.claims.read" }
    ],
    "ApiResources": [
      {
        "Name": "Catalog",
        "Scopes": [ "menu.read", "menu.write" ],
        "UserClaims": [ "role", "restaurant_id", "location_id" ]
      },
      {
        "Name": "Inventory",
        "Scopes": [ "inventory.read", "inventory.write" ],
        "UserClaims": [ "role", "restaurant_id", "location_id" ]
      },
      {
        "Name": "Order",
        "Scopes": [ "order.read", "order.write" ],
        "UserClaims": [ "role", "restaurant_id", "location_id" ]
      },
      {
        "Name": "Payment",
        "Scopes": [ "payment.read", "payment.charge", "payment.refund" ],
        "UserClaims": [ "role", "restaurant_id", "location_id" ]
      },
      {
        "Name": "Tenant",
        "Scopes": [ "tenant.claims.read" ],
        "UserClaims": [ "role", "restaurant_id", "location_id" ]
      }

    ],
    "Clients": [
      {
        "ClientId" : "postman",
        "AllowedGrantTypes" : [
          "authorization_code"
        ],
        "RequireClientSecret" : false,
        "RedirectUris": [
          "urn:ietf:wg:oauth:2.0:oob"
        ],
        "AllowedScopes": [
          "openid",
          "profile",
          "tenancy",
          "IdentityServerApi",
          "roles",
          "menu.read","menu.write",
          "inventory.read","inventory.write",
          "order.read","order.write",
          "payment.read","payment.charge","payment.refund"
        ],
        "AlwaysIncludeUserClaimsInIdToken" : true
      },
      {
        "ClientId" : "frontend",
        "AllowedGrantTypes" : [
          "authorization_code"
        ],
        "RequireClientSecret" : false,
        "RedirectUris": [
          "http://localhost:5173/authentication/login-callback"
        ],
        "PostLogoutRedirectUris" : [
          "http://localhost:5173/authentication/logout-callback"
        ],
        "AllowedCorsOrigins": [
          "http://localhost:5173",          
          "https://localhost:5173"         
        ],
        "AllowedScopes": [
          "openid",
          "profile",
          "tenancy",
          "IdentityServerApi",
          "roles",
          "menu.read","menu.write",
          "inventory.read","inventory.write",
          "order.read","order.write",
          "payment.read","payment.charge","payment.refund",
          "tenant.claims.read"
        ],
        "AlwaysIncludeUserClaimsInIdToken" : true
      },
      {
        "ClientId": "identity-tenant-client",
        "AllowedGrantTypes": [ "client_credentials" ],
        "ClientSecrets": [ "dev-identity-tenant-secret" ],
        "AllowedScopes": [ "tenant.claims.read" ]
      }
    ]
  }
  ,
  "TenantService": {
    "BaseUrl": "https://localhost:7180",
    "Mode": "Http",
    "Authority": "https://localhost:7163",
    "ClientId": "identity-tenant-client",
    "Scope": "tenant.claims.read"
  }
  
}
